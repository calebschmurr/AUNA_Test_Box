#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.1 on Tue Feb  9 10:30:26 2021
#

import wx


###########################################################################
######Include this as well in the MainWindowUI#############################
import PinList
import SerialMonitor
import TestSequence
import PinControlUI

import logging

from pathlib import Path

#Change current directory to location of python file.
#Need to do this to load in tests properly.
import os
os.chdir(os.path.dirname(os.path.abspath(__file__)))


###########################################################################
##################Finish Importing Logging#################################




# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MainWindow(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MainWindow.__init__
        kwds["style"] = kwds.get("style", 0) | wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((1200, 800))
        self.SetTitle("frame")

        self.Notebook = wx.Notebook(self, wx.ID_ANY)

        self.Load_Existing_Test_Tab = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Notebook.AddPage(self.Load_Existing_Test_Tab, "Load Test")

        self.Tab_Sizer = wx.BoxSizer(wx.VERTICAL)

        self.List_Of_Tests = wx.ListBox(self.Load_Existing_Test_Tab, wx.ID_ANY, choices=["choice 1"])
        self.List_Of_Tests.SetMinSize((500, 200))
        self.Tab_Sizer.Add(self.List_Of_Tests, 0, 0, 0)

        self.Load_Test = wx.Button(self.Load_Existing_Test_Tab, wx.ID_ANY, "Load Test")
        self.Tab_Sizer.Add(self.Load_Test, 0, 0, 0)

        self.Com_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Tab_Sizer.Add(self.Com_Sizer, 1, wx.EXPAND, 0)

        self.COM_Port_Label = wx.StaticText(self.Load_Existing_Test_Tab, wx.ID_ANY, "Serial Port:")
        self.Com_Sizer.Add(self.COM_Port_Label, 0, 0, 0)

        self.Port_Connect = wx.ComboBox(self.Load_Existing_Test_Tab, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.Com_Sizer.Add(self.Port_Connect, 0, 0, 0)

        self.Connect_Button = wx.Button(self.Load_Existing_Test_Tab, wx.ID_ANY, "Connect")
        self.Com_Sizer.Add(self.Connect_Button, 0, 0, 0)

        self.Disconnect_Button = wx.Button(self.Load_Existing_Test_Tab, wx.ID_ANY, "Disconnect")
        self.Com_Sizer.Add(self.Disconnect_Button, 0, 0, 0)

        self.ShowPinUI_Button = wx.Button(self.Load_Existing_Test_Tab, wx.ID_ANY, "Show Pin UI")
        self.Tab_Sizer.Add(self.ShowPinUI_Button, 0, 0, 0)

        self.Test_Tab = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Notebook.AddPage(self.Test_Tab, "Test")

        self.Test_Tab_Sizer = wx.BoxSizer(wx.VERTICAL)

        self.Current_Test_Label = wx.StaticText(self.Test_Tab, wx.ID_ANY, "Current Test:")
        self.Test_Tab_Sizer.Add(self.Current_Test_Label, 0, 0, 0)

        self.Next_Step_Image = wx.StaticBitmap(self.Test_Tab, wx.ID_ANY, wx.Bitmap("C:\\Users\\USER\\Documents\\Test_Box\\AUNA_Test_Box\\Computer_App\\demo_img.png", wx.BITMAP_TYPE_ANY))
        self.Next_Step_Image.SetMinSize((1000, 500))
        self.Test_Tab_Sizer.Add(self.Next_Step_Image, 0, 0, 0)

        self.Test_Status_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Test_Tab_Sizer.Add(self.Test_Status_Sizer, 1, wx.EXPAND, 0)

        self.Test_Status_Label = wx.StaticText(self.Test_Tab, wx.ID_ANY, "Status:")
        self.Test_Status_Label.SetMinSize((200, 16))
        self.Test_Status_Sizer.Add(self.Test_Status_Label, 0, 0, 0)

        self.Stage_Description_Label = wx.StaticText(self.Test_Tab, wx.ID_ANY, "Operation:")
        self.Stage_Description_Label.SetMinSize((200, 16))
        self.Test_Status_Sizer.Add(self.Stage_Description_Label, 0, 0, 0)

        self.Next_Step_Button = wx.Button(self.Test_Tab, wx.ID_ANY, "Next Step")
        self.Test_Status_Sizer.Add(self.Next_Step_Button, 0, 0, 0)

        self.New_Test_Initiator_Tab = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Notebook.AddPage(self.New_Test_Initiator_Tab, "New Test")

        self.Creator_Sizer = wx.BoxSizer(wx.VERTICAL)

        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        self.Creator_Sizer.Add(sizer_1, 1, wx.EXPAND, 0)

        self.Test_Name_Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "Test Name:", style=wx.ALIGN_RIGHT)
        self.Test_Name_Label.SetMinSize((200, 16))
        sizer_1.Add(self.Test_Name_Label, 0, wx.ALL, 5)

        self.TestNameTextbox = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "")
        self.TestNameTextbox.SetMinSize((200, 23))
        sizer_1.Add(self.TestNameTextbox, 0, 0, 0)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        self.Creator_Sizer.Add(sizer_2, 1, wx.EXPAND, 0)

        self.New_Test_Description_Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description:", style=wx.ALIGN_RIGHT)
        self.New_Test_Description_Label.SetMinSize((200, 16))
        sizer_2.Add(self.New_Test_Description_Label, 0, wx.ALL, 3)

        self.Test_Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "")
        self.Test_Description.SetMinSize((350, 23))
        sizer_2.Add(self.Test_Description, 0, 0, 0)

        self.label_3 = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "Pins Used:", style=wx.ALIGN_CENTER_HORIZONTAL)
        self.Creator_Sizer.Add(self.label_3, 0, wx.ALL, 4)

        self.Pins_Used_Sizer = wx.GridSizer(7, 4, 0, 0)
        self.Creator_Sizer.Add(self.Pins_Used_Sizer, 2, wx.EXPAND, 0)

        self.PinX1_1_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_1_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_1Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_1 (Analog 0)")
        self.PinX1_1_Sizer.Add(self.PinX1_1Label, 0, 0, 0)

        self.PinX1_1Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_1Select.SetSelection(2)
        self.PinX1_1_Sizer.Add(self.PinX1_1Select, 0, 0, 0)

        self.PinX1_1Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_1_Sizer.Add(self.PinX1_1Description, 0, 0, 0)

        self.PinX1_2_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_2_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_2Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_2 (Analog 1)")
        self.PinX1_2_Sizer.Add(self.PinX1_2Label, 0, 0, 0)

        self.PinX1_2Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_2Select.SetSelection(2)
        self.PinX1_2_Sizer.Add(self.PinX1_2Select, 0, 0, 0)

        self.PinX1_2Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_2_Sizer.Add(self.PinX1_2Description, 0, 0, 0)

        self.PinX1_3_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_3_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_3Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_3 (Analog 2)")
        self.PinX1_3_Sizer.Add(self.PinX1_3Label, 0, 0, 0)

        self.PinX1_3Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_3Select.SetSelection(2)
        self.PinX1_3_Sizer.Add(self.PinX1_3Select, 0, 0, 0)

        self.PinX1_3Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_3_Sizer.Add(self.PinX1_3Description, 0, 0, 0)

        self.PinX1_4_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_4_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_4Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_4 (Analog 3)")
        self.PinX1_4_Sizer.Add(self.PinX1_4Label, 0, 0, 0)

        self.PinX1_4Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_4Select.SetSelection(2)
        self.PinX1_4_Sizer.Add(self.PinX1_4Select, 0, 0, 0)

        self.PinX1_4Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_4_Sizer.Add(self.PinX1_4Description, 0, 0, 0)

        self.PinX1_5_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_5_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_5Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_5 (Analog 4)")
        self.PinX1_5_Sizer.Add(self.PinX1_5Label, 0, 0, 0)

        self.PinX1_5Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_5Select.SetSelection(2)
        self.PinX1_5_Sizer.Add(self.PinX1_5Select, 0, 0, 0)

        self.PinX1_5Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_5_Sizer.Add(self.PinX1_5Description, 0, 0, 0)

        self.PinX1_6_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_6_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_6Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_6 (Analog 5)")
        self.PinX1_6_Sizer.Add(self.PinX1_6Label, 0, 0, 0)

        self.PinX1_6Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_6_Sizer.Add(self.PinX1_6Select, 0, 0, 0)

        self.PinX1_6Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_6_Sizer.Add(self.PinX1_6Description, 0, 0, 0)

        self.PinX1_7_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_7_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_7Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_7 (Analog 6)")
        self.PinX1_7_Sizer.Add(self.PinX1_7Label, 0, 0, 0)

        self.PinX1_7Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_7Select.SetSelection(2)
        self.PinX1_7_Sizer.Add(self.PinX1_7Select, 0, 0, 0)

        self.PinX1_7Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_7_Sizer.Add(self.PinX1_7Description, 0, 0, 0)

        self.PinX1_8_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_8_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_8Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_8 (Analog 7)")
        self.PinX1_8_Sizer.Add(self.PinX1_8Label, 0, 0, 0)

        self.PinX1_8Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_8Select.SetSelection(2)
        self.PinX1_8_Sizer.Add(self.PinX1_8Select, 0, 0, 0)

        self.PinX1_9_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_9_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_9Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_9 (Analog 8)")
        self.PinX1_9_Sizer.Add(self.PinX1_9Label, 0, 0, 0)

        self.PinX1_9Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_9Select.SetSelection(2)
        self.PinX1_9_Sizer.Add(self.PinX1_9Select, 0, 0, 0)

        self.PinX1_9Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_9_Sizer.Add(self.PinX1_9Description, 0, 0, 0)

        self.PinX1_10_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_10_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_10Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_10 (Analog 9)")
        self.PinX1_10_Sizer.Add(self.PinX1_10Label, 0, 0, 0)

        self.PinX1_10Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_10Select.SetSelection(2)
        self.PinX1_10_Sizer.Add(self.PinX1_10Select, 0, 0, 0)

        self.PinX1_10Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_10_Sizer.Add(self.PinX1_10Description, 0, 0, 0)

        self.PinX1_11_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_11_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_11Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_11 (Analog 10)")
        self.PinX1_11_Sizer.Add(self.PinX1_11Label, 0, 0, 0)

        self.PinX1_11Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_11Select.SetSelection(2)
        self.PinX1_11_Sizer.Add(self.PinX1_11Select, 0, 0, 0)

        self.PinX1_11Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_11_Sizer.Add(self.PinX1_11Description, 0, 0, 0)

        self.PinX1_12_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_12_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_12Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_12 (Analog 11)")
        self.PinX1_12_Sizer.Add(self.PinX1_12Label, 0, 0, 0)

        self.PinX1_12Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Input", "Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_12Select.SetSelection(2)
        self.PinX1_12_Sizer.Add(self.PinX1_12Select, 0, 0, 0)

        self.PinX1_12Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_12_Sizer.Add(self.PinX1_12Description, 0, 0, 0)

        self.PinX1_13_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_13_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_13Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_13 (PWM 2)")
        self.PinX1_13_Sizer.Add(self.PinX1_13Label, 0, 0, 0)

        self.PinX1_13Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_13Select.SetSelection(1)
        self.PinX1_13_Sizer.Add(self.PinX1_13Select, 0, 0, 0)

        self.PinX1_13Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_13_Sizer.Add(self.PinX1_13Description, 0, 0, 0)

        self.PinX1_14_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_14_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_14Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_14 (PWM 3)")
        self.PinX1_14_Sizer.Add(self.PinX1_14Label, 0, 0, 0)

        self.PinX1_14Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_14Select.SetSelection(1)
        self.PinX1_14_Sizer.Add(self.PinX1_14Select, 0, 0, 0)

        self.PinX1_14Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_14_Sizer.Add(self.PinX1_14Description, 0, 0, 0)

        self.PinX1_15_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_15_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_15Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_15 (PWM 4)")
        self.PinX1_15_Sizer.Add(self.PinX1_15Label, 0, 0, 0)

        self.PinX1_15Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_15Select.SetSelection(1)
        self.PinX1_15_Sizer.Add(self.PinX1_15Select, 0, 0, 0)

        self.PinX1_15Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_15_Sizer.Add(self.PinX1_15Description, 0, 0, 0)

        self.PinX1_16_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_16_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_16Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_16 (PWM 5)")
        self.PinX1_16_Sizer.Add(self.PinX1_16Label, 0, 0, 0)

        self.PinX1_16Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_16Select.SetSelection(1)
        self.PinX1_16_Sizer.Add(self.PinX1_16Select, 0, 0, 0)

        self.PinX1_16Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_16_Sizer.Add(self.PinX1_16Description, 0, 0, 0)

        self.PinX1_17_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX1_17_Sizer, 1, wx.EXPAND, 0)

        self.PinX1_17Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X1_17 (PWM 6)")
        self.PinX1_17_Sizer.Add(self.PinX1_17Label, 0, 0, 0)

        self.PinX1_17Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX1_17Select.SetSelection(1)
        self.PinX1_17_Sizer.Add(self.PinX1_17Select, 0, 0, 0)

        self.PinX1_17Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX1_17_Sizer.Add(self.PinX1_17Description, 0, 0, 0)

        self.PinX2_1_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX2_1_Sizer, 1, wx.EXPAND, 0)

        self.PinX2_1Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X2_1 (K1 - 12V)")
        self.PinX2_1_Sizer.Add(self.PinX2_1Label, 0, 0, 0)

        self.PinX2_1Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX2_1Select.SetSelection(1)
        self.PinX2_1_Sizer.Add(self.PinX2_1Select, 0, 0, 0)

        self.PinX2_1Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX2_1_Sizer.Add(self.PinX2_1Description, 0, 0, 0)

        self.PinX2_2_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX2_2_Sizer, 1, wx.EXPAND, 0)

        self.PinX2_2Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X2_2 (K2 - 12V)")
        self.PinX2_2_Sizer.Add(self.PinX2_2Label, 0, 0, 0)

        self.PinX2_2Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX2_2Select.SetSelection(1)
        self.PinX2_2_Sizer.Add(self.PinX2_2Select, 0, 0, 0)

        self.PinX2_2Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX2_2_Sizer.Add(self.PinX2_2Description, 0, 0, 0)

        self.PinX2_3_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX2_3_Sizer, 1, wx.EXPAND, 0)

        self.PinX2_3Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X2_3 (K3 - 12V)")
        self.PinX2_3_Sizer.Add(self.PinX2_3Label, 0, 0, 0)

        self.PinX2_3Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX2_3Select.SetSelection(1)
        self.PinX2_3_Sizer.Add(self.PinX2_3Select, 0, 0, 0)

        self.PinX2_3Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX2_3_Sizer.Add(self.PinX2_3Description, 0, 0, 0)

        self.PinX2_4_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX2_4_Sizer, 1, wx.EXPAND, 0)

        self.PinX2_4Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X2_4 (K4 - 12V)")
        self.PinX2_4_Sizer.Add(self.PinX2_4Label, 0, 0, 0)

        self.PinX2_4Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX2_4Select.SetSelection(1)
        self.PinX2_4_Sizer.Add(self.PinX2_4Select, 0, 0, 0)

        self.PinX2_4Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX2_4_Sizer.Add(self.PinX2_4Description, 0, 0, 0)

        self.PinX2_5_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX2_5_Sizer, 1, wx.EXPAND, 0)

        self.PinX2_5Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X2_5 (K5 - 24V)")
        self.PinX2_5_Sizer.Add(self.PinX2_5Label, 0, 0, 0)

        self.PinX2_5Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX2_5Select.SetSelection(1)
        self.PinX2_5_Sizer.Add(self.PinX2_5Select, 0, 0, 0)

        self.PinX2_5Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX2_5_Sizer.Add(self.PinX2_5Description, 0, 0, 0)

        self.PinX2_6_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX2_6_Sizer, 1, wx.EXPAND, 0)

        self.PinX2_6Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X2_6 (K6 - 24V)")
        self.PinX2_6_Sizer.Add(self.PinX2_6Label, 0, 0, 0)

        self.PinX2_6Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX2_6Select.SetSelection(1)
        self.PinX2_6_Sizer.Add(self.PinX2_6Select, 0, 0, 0)

        self.PinX2_6Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX2_6_Sizer.Add(self.PinX2_6Description, 0, 0, 0)

        self.PinX2_7_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX2_7_Sizer, 1, wx.EXPAND, 0)

        self.PinX2_7Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X2_7 (K7 - 24V)")
        self.PinX2_7_Sizer.Add(self.PinX2_7Label, 0, 0, 0)

        self.PinX2_7Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX2_7Select.SetSelection(1)
        self.PinX2_7_Sizer.Add(self.PinX2_7Select, 0, 0, 0)

        self.PinX2_7Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX2_7_Sizer.Add(self.PinX2_7Description, 0, 0, 0)

        self.PinX2_8_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Pins_Used_Sizer.Add(self.PinX2_8_Sizer, 1, wx.EXPAND, 0)

        self.PinX2_8Label = wx.StaticText(self.New_Test_Initiator_Tab, wx.ID_ANY, "X2_8 (K8 - 24V)")
        self.PinX2_8_Sizer.Add(self.PinX2_8Label, 0, 0, 0)

        self.PinX2_8Select = wx.ComboBox(self.New_Test_Initiator_Tab, wx.ID_ANY, choices=["Output", "Unused"], style=wx.CB_DROPDOWN)
        self.PinX2_8Select.SetSelection(1)
        self.PinX2_8_Sizer.Add(self.PinX2_8Select, 0, 0, 0)

        self.PinX2_8Description = wx.TextCtrl(self.New_Test_Initiator_Tab, wx.ID_ANY, "Description")
        self.PinX2_8_Sizer.Add(self.PinX2_8Description, 0, 0, 0)

        self.Pins_Used_Sizer.Add((0, 0), 0, 0, 0)

        self.Pins_Used_Sizer.Add((0, 0), 0, 0, 0)

        self.Pins_Used_Sizer.Add((0, 0), 0, 0, 0)

        self.newTestButtonsSizer = wx.BoxSizer(wx.HORIZONTAL)
        self.Creator_Sizer.Add(self.newTestButtonsSizer, 1, wx.EXPAND, 0)

        self.createNewTestButton = wx.Button(self.New_Test_Initiator_Tab, wx.ID_ANY, "Create New Test")
        self.createNewTestButton.SetMinSize((100, 40))
        self.newTestButtonsSizer.Add(self.createNewTestButton, 0, wx.ALL, 8)

        self.clearNewTestValuesButton = wx.Button(self.New_Test_Initiator_Tab, wx.ID_ANY, "Clear All Values")
        self.clearNewTestValuesButton.SetMinSize((100, 40))
        self.newTestButtonsSizer.Add(self.clearNewTestValuesButton, 0, wx.ALL, 8)

        self.New_Test_Creator = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Notebook.AddPage(self.New_Test_Creator, "New Test Creator")

        NewTestCreatorSizer = wx.BoxSizer(wx.VERTICAL)

        self.TestInfoSizer = wx.BoxSizer(wx.HORIZONTAL)
        NewTestCreatorSizer.Add(self.TestInfoSizer, 1, wx.EXPAND, 0)

        self.ListOfTests = wx.StaticText(self.New_Test_Creator, wx.ID_ANY, "Test Name:")
        self.ListOfTests.SetMinSize((200, 16))
        self.TestInfoSizer.Add(self.ListOfTests, 0, wx.ALL, 4)

        self.label_1 = wx.StaticText(self.New_Test_Creator, wx.ID_ANY, "Stage: 0/0")
        self.label_1.SetMinSize((200, 16))
        self.TestInfoSizer.Add(self.label_1, 0, wx.ALL, 4)

        self.PreviousStage = wx.Button(self.New_Test_Creator, wx.ID_ANY, "Previous Stage")
        self.PreviousStage.SetMinSize((150, 23))
        self.TestInfoSizer.Add(self.PreviousStage, 0, wx.ALL, 4)

        self.NextStage = wx.Button(self.New_Test_Creator, wx.ID_ANY, "Next Stage")
        self.NextStage.SetMinSize((140, 23))
        self.TestInfoSizer.Add(self.NextStage, 0, wx.ALL, 4)

        self.Horizontal_Sizer = wx.BoxSizer(wx.HORIZONTAL)
        NewTestCreatorSizer.Add(self.Horizontal_Sizer, 1, wx.EXPAND, 0)

        label_2 = wx.StaticText(self.New_Test_Creator, wx.ID_ANY, "Image:")
        self.Horizontal_Sizer.Add(label_2, 0, wx.ALL, 5)

        self.SelectStageImageButton = wx.Button(self.New_Test_Creator, wx.ID_ANY, "Select Image")
        self.SelectStageImageButton.SetMinSize((120, 30))
        self.Horizontal_Sizer.Add(self.SelectStageImageButton, 0, wx.ALL, 5)

        PinsAddSizer = wx.BoxSizer(wx.HORIZONTAL)
        NewTestCreatorSizer.Add(PinsAddSizer, 1, wx.EXPAND, 0)

        self.Result_Viewer = wx.Panel(self.Notebook, wx.ID_ANY)
        self.Notebook.AddPage(self.Result_Viewer, "Result Viewer")

        self.New_Test_Creator.SetSizer(NewTestCreatorSizer)

        self.New_Test_Initiator_Tab.SetSizer(self.Creator_Sizer)

        self.Test_Tab.SetSizer(self.Test_Tab_Sizer)

        self.Load_Existing_Test_Tab.SetSizer(self.Tab_Sizer)

        self.Layout()
        # end wxGlade


        
#### To be placed under init of MainWindowUI ############################################################################################################
##########################################################################################################################################################
        
        logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')

        self.stopClose = False
        self.testActive = False

        self.PinControl = PinControlUI.Pin_Control(None, wx.ID_ANY, "")
        
        #Load up combo box.
        preferred_index = -1
        self.Port_Connect.Clear()
        for n, (portname, desc, hwid) in enumerate(sorted(PinControlUI.SerialComm.serial.tools.list_ports.comports())):
            self.Port_Connect.Append(u'{} - {}'.format(portname, desc))
            
        self.Port_Connect.SetSelection(preferred_index)
        self.__attach_events()
        self.loadTests()


        self.test = None #Currently loaded test
        self.currentStage = None #Currently loaded stage.

    def __attach_events(self):

        self.Connect_Button.Bind(wx.EVT_BUTTON, self.ConnectPort)
        self.ShowPinUI_Button.Bind(wx.EVT_BUTTON, self.showPinUI)
        self.Bind(wx.EVT_CLOSE, self.OnClose)
        self.Load_Test.Bind(wx.EVT_BUTTON, self.LoadTestPushed)
        self.Next_Step_Button.Bind(wx.EVT_BUTTON, self.nextStepPushed)
        #self.PortConnect()

    #loadTests - load in the test procedures located in test folder.
    #Then populate the list with them.
    def loadTests(self):
        p = Path('.') #Using pathlib - replacement of os.
        p2 = p / "Tests"
        if p2.exists():
            for x in p2.iterdir():
                if x.is_dir():
                    self.List_Of_Tests.Append(x.name)
        else:
            print("error - Tests directory not found.")            


    def ConnectPort(self, events):
        self.PinControl.ExternalStartSerial(self.Port_Connect.GetSelection())
        #Disable the connect button.

    def showPinUI(self, events):
        self.PinControl.Show()
        #TODO: Change the PinControlUI to be able to be 'closed', made
        #not visible anymore and then able to be made visible again.

    def OnClose(self, event):
        if self.stopClose:
            if wx.MessageBox("File has not been saved, continue closing?", "Please confirm below.", wx.ICON_QUESTION | wx.YES_NO) != wx.YES:
                event.veto()
                return

        #self.PinControl.stopUIThread()
        self.PinControl.closeSelf()
        self.Destroy()
        exit(0)

    #Load in the files for the test sequence after button click.
    def loadTestSequence(self, path):
        #Get a list of all files within the test folder
        if path.exists():
            logging.info("path exists")
            for x in path.iterdir():
                if x.is_file():
                    #logging.debug("x is file")
                    if x.suffix == '.txt':
                        #logging.debug("txt file found.")
                        self.test = TestSequence.TestSequence(self.PinControl.SerialLine.PinsList, x)
                    if x.suffix == '.png' or x.suffix == '.jpg' or x.suffix == '.bmp':
                        #If the suffix is an image,
                        pass
        else:
            print("Error  - file not found/path does not exist.")

        #Find the .txt, then parse in as json
        #Load the rest of the images, store in image container.
        #Need to make a class to contain it.

    #Load the Test selected, or say no test selected/display test error.
    def LoadTestPushed(self, event):
        #On load of test, open the test tab.
        if (self.List_Of_Tests.GetSelection()==-1):
            wx.MessageBox("Nothing selected.  No action able to be performed", "No Selected Test",  wx.OK | wx.ICON_INFORMATION)
            return
        #Initiate loading test in new tab.
        #Switch tab
        p = Path('.')
        p = p/"Tests"/self.List_Of_Tests.GetStringSelection()
        logging.debug(p)
        self.loadTestSequence(p)
        #logging.info(self.test.exportJsonFile())
        self.Notebook.SetSelection(1)
        self.testActive = True
        self.test.FolderPath = p
        self.startTest()


    #next step pushed
    def nextStepPushed(self, event):
        if self.testActive:
            if self.test.isNextTest():
                if self.currentStage.passPinCheck():
                    self.loadNextTestStage()
                else:
                    #Does not pass check
                    #Code this in.
                    pass
            else:
                self.finishTest()
        


    def startTest(self):
        self.Current_Test_Label.SetLabel("Current Test: {}".format(self.test.name))
        self.loadNextTestStage()

    def loadNextTestStage(self):
        self.currentStage = self.test.getNextTest()
        #Load in the image
        
        for x in self.test.FolderPath.iterdir():
            logging.debug("Checking for image {}".format(self.currentStage.imgpath))
            if x.is_file():
                logging.debug(x.name)
                if x.name==self.currentStage.imgpath:
                    logging.debug("Found image, updating.")
                    self.Next_Step_Image.SetBitmap(wx.Bitmap(str(x.resolve()), wx.BITMAP_TYPE_ANY))
        #Load in the test stage number, and adjust the status below
        self.Test_Status_Label.SetLabel("Stage {} out of {}".format(self.test.current_test, self.test.getNumStages()))
        #Change Operation to say Description.
        self.Stage_Description_Label.SetLabel("{}".format(self.currentStage.description))
        pass

    def finishTest(self):
        wx.MessageBox("Test finished - passed.", "Test Passed",  wx.OK | wx.ICON_INFORMATION)
        self.testActive = False
        self.Notebook.SetSelection(0)

###############################################################################################################################################

# end of class MainWindow

# end of class MainWindow

class MyApp(wx.App):
    def OnInit(self):
        self.frame = MainWindow(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class MyApp

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
